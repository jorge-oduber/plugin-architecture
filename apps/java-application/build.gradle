plugins {
  id 'application'
}

mainClassName = 'org.pf4j.demo.Boot'

run {
  systemProperty 'pf4j.pluginsDir', '../../build/plugins'
}

dependencies {
  implementation project(':api')
  implementation("org.pf4j:pf4j:${pf4jVersion}")
  annotationProcessor("org.pf4j:pf4j:${pf4jVersion}")
  implementation "org.apache.commons:commons-lang3:3.5"
  implementation "org.slf4j:slf4j-simple:1.7.25"
}

jar {
  manifest {
    attributes(
      'Main-Class': 'org.pf4j.demo.Boot',
      "Class-Path": configurations.compileClasspath.collect { "lib/${it.getName()}" }.join(' ')
    )
  }
}

task copyDeps(type: Copy) {
  from configurations.compileClasspath
  into "${buildDir}/libs/lib"
}

build.dependsOn project.tasks.copyDeps

application {
  // Define the main class for the application.
  mainClass.set('org.pf4j.demo.Boot')
}

task uberjar(type: Jar, dependsOn: ['compileJava']) {
  zip64 true
  from configurations.runtimeClasspath.asFileTree.files.collect {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
    zipTree(it)
  }
  from files(sourceSets.main.output.classesDirs)
  from files(sourceSets.main.resources)
  manifest.attributes('Main-Class': mainClassName)
  
  archiveBaseName.set("${project.name}")
  archiveClassifier.set("uberjar")
}